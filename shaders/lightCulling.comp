#version 450

#define TILE_SIZE 16
#define NUM_LIGHTS_PER_TILE 1024
struct Attenuation
{
	// quadratic*x^2+linear*x+constant
	float quadratic;
	float linear;
	float constant;
};

#define DIRECTIONAL_LIGHT 0
#define POINT_LIGHT 1
#define SPOT_LIGHT 2
struct Light
{
	uint type;

	vec3 color;
	float intensity;
	Attenuation attenuation;

	vec3 direction; //only for directional and spotlights
	float cutoff; //only for spotlights
}

// i think we dont need these bindings to be the same as in the frag shader
layout(binding = 1) readonly buffer LightBuffer
{
	Light data[];
} lightBuffer;
layout(binding = 2) writeonly buffer VisibleLightsBuffer
{
	uint data[];
} visibleLightsBuffer;

layout(binding = 3) uniform sampler2D depthTexture;

layout(binding = 4) uniform Info
{
	ivec2 screenSize;
	uint lightCount;
	mat4 viewProjection;
}

layout(local_size_x = TILE_SIZE, local_size_y = TILE_SIZE, local_size_z = 1) in;

void main()
{

}
